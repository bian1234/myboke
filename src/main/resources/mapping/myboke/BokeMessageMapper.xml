<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.byk.myboke.boke.mapper.BokeMessageMapper" >
  <resultMap id="BaseResultMap" type="com.byk.myboke.boke.entity.BokeMessage" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="fullName" property="fullname" jdbcType="VARCHAR" />
    <result column="phoneNumber" property="phonenumber" jdbcType="VARCHAR" />
    <result column="emailAddress" property="emailaddress" jdbcType="VARCHAR" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="reply" property="reply" jdbcType="INTEGER" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="user_ip" property="userIp" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, fullName, phoneNumber, emailAddress, subject, reply, message, user_ip, create_user, 
    create_time, del_flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from boke_message
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from boke_message
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.byk.myboke.boke.entity.BokeMessage" >
    <selectKey keyProperty="id" resultType="string" order="BEFORE">
      select replace(uuid(), '-', '') as id from dual
    </selectKey>
    insert into boke_message (id, fullName, phoneNumber, 
      emailAddress, subject, reply, 
      message, user_ip, create_user, 
      create_time, del_flag)
    values (#{id,jdbcType=VARCHAR}, #{fullname,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, 
      #{emailaddress,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, #{reply,jdbcType=INTEGER}, 
      #{message,jdbcType=VARCHAR}, #{userIp,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.byk.myboke.boke.entity.BokeMessage" >
    <selectKey keyProperty="id" resultType="string" order="BEFORE">
      select replace(uuid(), '-', '') as id from dual
    </selectKey>
    insert into boke_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fullname != null" >
        fullName,
      </if>
      <if test="phonenumber != null" >
        phoneNumber,
      </if>
      <if test="emailaddress != null" >
        emailAddress,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="reply != null" >
        reply,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="userIp != null" >
        user_ip,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="fullname != null" >
        #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="emailaddress != null" >
        #{emailaddress,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="reply != null" >
        #{reply,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="userIp != null" >
        #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.byk.myboke.boke.entity.BokeMessage" >
    update boke_message
    <set >
      <if test="fullname != null" >
        fullName = #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="emailaddress != null" >
        emailAddress = #{emailaddress,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="reply != null" >
        reply = #{reply,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="userIp != null" >
        user_ip = #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.byk.myboke.boke.entity.BokeMessage" >
    update boke_message
    set fullName = #{fullname,jdbcType=VARCHAR},
      phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      emailAddress = #{emailaddress,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      reply = #{reply,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      user_ip = #{userIp,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>